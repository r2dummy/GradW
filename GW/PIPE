pipeline {

    agent any
    environment {
        finalname = "spring-boot-smoke-test-web-ui-${env.BUILD_NUMBER}"
    }
    tools {
        maven "Maven"
        jdk "java"
    }
     triggers {
        pollSCM('* * * * *') 
    }
     stages {
        stage('Clone repo') {
            steps {

                git branch: 'master',
                credentialsId: 'github-token',
                url: 'https://github.com/r2dummy/spring-boot.git'
            }
        }
        stage(BUILD) {
            steps {
                sh "mvn clean install -f /var/lib/jenkins/workspace/GradWork/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-ui/pom.xml -Dmaven.test.skip=true -Dmaven.test.failure.ignore=true"                 
                
                }


        }
         
        stage(UPLOAD) {
            steps {
                rtServer (
                    id: "jenk-artifactory-server",
                    url: "http://18.207.221.194:8081/artifactory",
                    // If you're using username and password:
                    username: "milook",
                    password: "miklmiklmikl"
                )      
                rtUpload (
                    serverId: "jenk-artifactory-server",
                    spec:
                        """{
                        "files": [
                            {
                            "pattern": "/var/lib/jenkins/workspace/GradWork/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-web-ui/target/*.jar",
                            "target": "libs-snapshot-local/org/springframework/boot/spring-boot-smoke-test-web-ui/2.2.0.BUILD-SNAPSHOT/${env.finalname}.jar"
                            }
                        ]
                        }"""
                ) 
                rtPublishBuildInfo (
                    serverId: "jenk-artifactory-server"
                ) 

            }
        
        }
        stage(CI_DEPLOY) {
            steps {
                    echo "-----CI--Deploying-------"
                    sh "ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook  /var/lib/jenkins/workspace/GradWork/deploy.yml -e 'BUILD_NUMBER=${env.BUILD_NUMBER} ENV=CI'"
            }

        }
        stage("deploy to QA") {
            input {
                message "Should we deploy to QA env?"
            }
            steps {
                echo "-----QA--Deploying-----"
                sh "ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook /var/lib/jenkins/workspace/GradWork/deploy.yml -e 'BUILD_NUMBER=${env.BUILD_NUMBER} ENV=QA'"
            }
        }
    }
    
}
